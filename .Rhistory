returnParticipants = FALSE,
outcomeWashout = 0,
repeatedEvents = TRUE
)
# rename and store incidence data in a convenient object
inc_incidental_use_copd_adj <-
inc_incidental_use_copd %>%
dplyr::mutate(
denominator_cohort_name = ifelse(
denominator_cohort_name=="Denominator cohort 1",
"Incidental use",
NA)
)
# save
if (!dir.exists(here::here("Macrolides"))) {dir.create(here::here("Macrolides"))}
write.csv(inc_incidental_use_copd_adj, here::here("Macrolides/inc_incidental_use_copd_adj.csv"))
library(DrugUtilisation)
# generate the drug utilisation cohort for COPD
cdm_copd <- DrugUtilisation::generateDrugUtilisationCohortSet(
cdm = cdm_copd,
name = "incidence chronic use copd",
conceptSet = all_concept_ids,
durationRange = c(30,Inf),
imputeDuration = "none",
gapEra = 7,
priorUseWashout = 0,
priorObservation = 0,
#cohortDateRange = as.Date(c("2010-01-01", "2022-12-31")),
limit = "all"
)
library(IncidencePrevalence)
# generating the denominator
cdm_copd <- IncidencePrevalence::generateDenominatorCohortSet(
cdm = cdm_copd,
name = "denominator_incidence_chronic_use_copd",
#cohortDateRange = as.Date(c("2010-01-01", "2022-12-31")),
#ageGroup = list(c(0, 150)),
#daysPriorObservation = 0,
requirementInteractions = TRUE)
# calculating incidence
inc_chronic_use_copd <- IncidencePrevalence::estimateIncidence(
cdm = cdm_copd,
denominatorTable = "denominator_incidence_chronic_use_copd",
outcomeTable = "incidence chronic use copd",
denominatorCohortId = NULL, #all ids are selected
outcomeCohortId = NULL, #all ids are selected
interval = c("years","overall"),
completeDatabaseIntervals = TRUE,
strata = list(),
includeOverallStrata = TRUE,
minCellCount = 0,
#temporary = TRUE,
returnParticipants = FALSE,
outcomeWashout = 0,
repeatedEvents = TRUE
)
# rename and store incidence data in a convenient object
inc_chronic_use_copd_adj <-
inc_chronic_use_copd %>%
dplyr::mutate(
denominator_cohort_name = ifelse(
denominator_cohort_name=="Denominator cohort 1",
"Chronic use",
NA)
)
# save
if (!dir.exists(here::here("Macrolides"))) {dir.create(here::here("Macrolides"))}
write.csv(inc_chronic_use_copd_adj, here::here("Macrolides/inc_chronic_use_copd_adj.csv"))
library(DrugUtilisation)
# generate the drug utilisation cohort for asthma
cdm_asthma <- DrugUtilisation::generateDrugUtilisationCohortSet(
cdm = cdm_asthma,
name = "incidence incidental use asthma",
conceptSet = all_concept_ids,
durationRange = c(1, 29),
imputeDuration = "none",
gapEra = 7,
priorUseWashout = 0,
priorObservation = 0,
#cohortDateRange = as.Date(c("2010-01-01", "2022-12-31")),
limit = "all"
)
library(DrugUtilisation)
# generate the drug utilisation cohort for asthma
cdm_asthma <- DrugUtilisation::generateDrugUtilisationCohortSet(
cdm = cdm_asthma,
name = "incidence incidental use asthma",
conceptSet = all_concept_ids,
durationRange = c(1, 29),
imputeDuration = "none",
gapEra = 7,
priorUseWashout = 0,
priorObservation = 0,
#cohortDateRange = as.Date(c("2010-01-01", "2022-12-31")),
limit = "all"
)
library(IncidencePrevalence)
# generating the denominator
cdm_asthma <- IncidencePrevalence::generateDenominatorCohortSet(
cdm = cdm_asthma,
name = "denominator_incidence_incidental_use_asthma",
#cohortDateRange = as.Date(c("2010-01-01", "2022-12-31")),
#ageGroup = list(c(0, 150)),
#daysPriorObservation = 0,
requirementInteractions = TRUE)
# calculating overall incidence
inc_incidental_use_asthma <- IncidencePrevalence::estimateIncidence(
cdm = cdm_asthma,
denominatorTable = "denominator_incidence_incidental_use_asthma",
outcomeTable = "incidence incidental use asthma",
denominatorCohortId = NULL, #all ids are selected
outcomeCohortId = NULL, #all ids are selected
interval = c("years","overall"),
completeDatabaseIntervals = TRUE,
strata = list(),
includeOverallStrata = TRUE,
minCellCount = 0,
#temporary = TRUE,
returnParticipants = FALSE,
outcomeWashout = 0,
repeatedEvents = TRUE
)
# rename and store incidence data in a convenient object
inc_incidental_use_asthma_adj <-
inc_incidental_use_asthma %>%
dplyr::mutate(
denominator_cohort_name = ifelse(
denominator_cohort_name=="Denominator cohort 1",
"Incidental use",
NA)
)
# save
if (!dir.exists(here::here("Macrolides"))) {dir.create(here::here("Macrolides"))}
write.csv(inc_incidental_use_asthma_adj, here::here("Macrolides/inc_incidental_use_asthma_adj.csv"))
library(DrugUtilisation)
# generate the drug utilisation cohort for asthma
cdm_asthma <- DrugUtilisation::generateDrugUtilisationCohortSet(
cdm = cdm_asthma,
name = "incidence chronic use asthma",
conceptSet = all_concept_ids,
durationRange = c(30, Inf),
imputeDuration = "none",
gapEra = 7,
priorUseWashout = 0,
priorObservation = 0,
#cohortDateRange = as.Date(c("2010-01-01", "2022-12-31")),
limit = "all"
)
library(IncidencePrevalence)
# generating the denominator
cdm_asthma <- IncidencePrevalence::generateDenominatorCohortSet(
cdm = cdm_asthma,
name = "denominator_incidence_chronic_use_asthma",
#cohortDateRange = as.Date(c("2010-01-01", "2022-12-31")),
#ageGroup = list(c(0, 150)),
#daysPriorObservation = 0,
requirementInteractions = TRUE)
# calculating overall incidence
inc_chronic_use_asthma <- IncidencePrevalence::estimateIncidence(
cdm = cdm_asthma,
denominatorTable = "denominator_incidence_chronic_use_asthma",
outcomeTable = "incidence chronic use asthma",
denominatorCohortId = NULL, #all ids are selected
outcomeCohortId = NULL, #all ids are selected
interval = c("years","overall"),
completeDatabaseIntervals = TRUE,
strata = list(),
includeOverallStrata = TRUE,
minCellCount = 0,
#temporary = TRUE,
returnParticipants = FALSE,
outcomeWashout = 0,
repeatedEvents = TRUE
)
# rename and store incidence data in a convenient object
inc_chronic_use_asthma_adj <-
inc_chronic_use_asthma %>%
dplyr::mutate(
denominator_cohort_name = ifelse(
denominator_cohort_name=="Denominator cohort 1",
"Chronic use",
NA)
)
# save
if (!dir.exists(here::here("Macrolides"))) {dir.create(here::here("Macrolides"))}
write.csv(inc_chronic_use_asthma_adj, here::here("Macrolides/inc_chronic_use_asthma_adj.csv"))
library(DrugUtilisation)
# generate the drug utilisation cohort
cdm_aco <- DrugUtilisation::generateDrugUtilisationCohortSet(
cdm = cdm_aco,
name = "incidence incidental use aco",
conceptSet = all_concept_ids,
durationRange = c(1, 29),
imputeDuration = "none",
gapEra = 7,
priorUseWashout = 0,
priorObservation = 0,
#cohortDateRange = as.Date(c("2010-01-01", "2022-12-31")),
limit = "all"
)
library(IncidencePrevalence)
# generating the denominator
cdm_aco <- IncidencePrevalence::generateDenominatorCohortSet(
cdm = cdm_aco,
name = "denominator_incidence_incidental_use_aco",
#cohortDateRange = as.Date(c("2010-01-01", "2022-12-31")),
#ageGroup = list(c(0, 150)),
#daysPriorObservation = 0,
requirementInteractions = TRUE)
# calculating incidence
inc_incidental_use_aco  <- IncidencePrevalence::estimateIncidence(
cdm = cdm_aco ,
denominatorTable = "denominator_incidence_incidental_use_aco",
outcomeTable = "incidence incidental use aco",
denominatorCohortId = NULL, #all ids are selected
outcomeCohortId = NULL, #all ids are selected
interval = c("years","overall"),
completeDatabaseIntervals = TRUE,
strata = list(),
includeOverallStrata = TRUE,
minCellCount = 0,
#temporary = TRUE,
returnParticipants = FALSE,
outcomeWashout = 0,
repeatedEvents = TRUE
)
# rename and store incidence data in a convenient object
inc_incidental_use_aco_adj <-
inc_incidental_use_aco %>%
dplyr::mutate(
denominator_cohort_name = ifelse(
denominator_cohort_name=="Denominator cohort 1",
"Incidental use",
NA)
)
# save
if (!dir.exists(here::here("Macrolides"))) {dir.create(here::here("Macrolides"))}
write.csv(inc_incidental_use_aco_adj, here::here("Macrolides/inc_incidental_use_aco_adj.csv"))
library(DrugUtilisation)
# generate the drug utilisation cohort
cdm_aco <- DrugUtilisation::generateDrugUtilisationCohortSet(
cdm = cdm_aco,
name = "incidence chronic use aco",
conceptSet = all_concept_ids,
durationRange = c(30, Inf),
imputeDuration = "none",
gapEra = 7,
priorUseWashout = 0,
priorObservation = 0,
#cohortDateRange = as.Date(c("2010-01-01", "2022-12-31")),
limit = "all"
)
library(IncidencePrevalence)
# generating the denominator
cdm_aco <- IncidencePrevalence::generateDenominatorCohortSet(
cdm = cdm_aco,
name = "denominator_incidence_chronic_use_aco",
#cohortDateRange = as.Date(c("2010-01-01", "2022-12-31")),
#ageGroup = list(c(0, 150)),
#daysPriorObservation = 0,
requirementInteractions = TRUE)
# calculating incidence
inc_chronic_use_aco <- IncidencePrevalence::estimateIncidence(
cdm = cdm_aco ,
denominatorTable = "denominator_incidence_chronic_use_aco",
outcomeTable = "incidence chronic use aco",
denominatorCohortId = NULL, #all ids are selected
outcomeCohortId = NULL, #all ids are selected
interval = c("years","overall"),
completeDatabaseIntervals = TRUE,
strata = list(),
includeOverallStrata = TRUE,
minCellCount = 0,
#temporary = TRUE,
returnParticipants = FALSE,
outcomeWashout = 0,
repeatedEvents = TRUE
)
# rename and store incidence data in a convenient object
inc_chronic_use_aco_adj <-
inc_chronic_use_aco %>%
dplyr::mutate(
denominator_cohort_name = ifelse(
denominator_cohort_name=="Denominator cohort 1",
"Chronic use",
NA)
)
# save
if (!dir.exists(here::here("Macrolides"))) {dir.create(here::here("Macrolides"))}
write.csv(inc_chronic_use_aco_adj, here::here("Macrolides/inc_chronic_use_aco_adj.csv"))
library(DrugUtilisation)
# generate the drug utilisation cohort
cdm <- DrugUtilisation::generateDrugUtilisationCohortSet(
cdm = cdm,
name = "incidence incidental use general population",
conceptSet = all_concept_ids,
durationRange = c(1,29),
imputeDuration = "none",
gapEra = 7,
priorUseWashout = 0,
priorObservation = 0,
#cohortDateRange = as.Date(c("2010-01-01", "2022-12-31")),
limit = "all"
)
library(IncidencePrevalence)
# generating the denominator
cdm <- IncidencePrevalence::generateDenominatorCohortSet(
cdm = cdm,
name = "denominator_incidence_incidental_use_general_population",
#cohortDateRange = as.Date(c("2010-01-01", "2022-12-31")),
#ageGroup = list(c(0, 150)),
#sex = "both"
#daysPriorObservation = 0,
requirementInteractions = TRUE)
cdm <- IncidencePrevalence::generateDenominatorCohortSet(
cdm = cdm,
name = "denominator_incidence_incidental_use_general",
#cohortDateRange = as.Date(c("2010-01-01", "2022-12-31")),
#ageGroup = list(c(0, 150)),
#sex = "both"
#daysPriorObservation = 0,
requirementInteractions = TRUE)
# calculating incidence
inc_incidental_use_general_population  <- IncidencePrevalence::estimateIncidence(
cdm = cdm ,
denominatorTable = "denominator_incidence_incidental_use_general",
outcomeTable = "incidence incidental use general population",
denominatorCohortId = NULL, #all ids are selected
outcomeCohortId = NULL, #all ids are selected
interval = c("years","overall"),
completeDatabaseIntervals = TRUE,
strata = list(),
includeOverallStrata = TRUE,
minCellCount = 0,
#temporary = TRUE,
returnParticipants = FALSE,
outcomeWashout = 0,
repeatedEvents = TRUE
)
# rename and store incidence data in a convenient object
inc_incidental_use_general_population_adj <-
inc_incidental_use_general_population  %>%
dplyr::mutate(
denominator_cohort_name = ifelse(
denominator_cohort_name=="Denominator cohort 1",
"Incidental use",
NA)
)
# save
if (!dir.exists(here::here("Macrolides"))) {dir.create(here::here("Macrolides"))}
write.csv(inc_incidental_use_general_population_adj, here::here("Macrolides/inc_incidental_use_general_population_adj.csv"))
library(DrugUtilisation)
# generate the drug utilisation cohort
cdm <- DrugUtilisation::generateDrugUtilisationCohortSet(
cdm = cdm,
name = "incidence chronic use general population",
conceptSet = all_concept_ids,
durationRange = c(30, Inf),
imputeDuration = "none",
gapEra = 7,
priorUseWashout = 0,
priorObservation = 0,
#cohortDateRange = as.Date(c("2010-01-01", "2022-12-31")),
limit = "all"
)
library(IncidencePrevalence)
# generating the denominator
cdm <- IncidencePrevalence::generateDenominatorCohortSet(
cdm = cdm,
name = "denominator_incidence_chronic_use_general",
#cohortDateRange = as.Date(c("2010-01-01", "2022-12-31")),
#ageGroup = list(c(0, 150)),
#sex = "both"
#daysPriorObservation = 0,
requirementInteractions = TRUE)
# calculating incidence
inc_chronic_use_general_population  <- IncidencePrevalence::estimateIncidence(
cdm = cdm ,
denominatorTable = "denominator_incidence_chronic_use_general",
outcomeTable = "incidence chronic use general population",
denominatorCohortId = NULL, #all ids are selected
outcomeCohortId = NULL, #all ids are selected
interval = c("years","overall"),
completeDatabaseIntervals = TRUE,
strata = list(),
includeOverallStrata = TRUE,
minCellCount = 0,
#temporary = TRUE,
returnParticipants = FALSE,
outcomeWashout = 0,
repeatedEvents = TRUE
)
# rename and store incidence data in a convenient object
inc_chronic_use_general_population_adj <-
inc_chronic_use_general_population  %>%
dplyr::mutate(
denominator_cohort_name = ifelse(
denominator_cohort_name=="Denominator cohort 1",
"Chronic use",
NA)
)
# save
if (!dir.exists(here::here("Macrolides"))) {dir.create(here::here("Macrolides"))}
write.csv(inc_chronic_use_general_population_adj, here::here("Macrolides/inc_chronic_use_general_population_adj.csv"))
inc_years_copd <- rbind(inc_copd_adj) %>%
filter(analysis_interval=="years") %>%
mutate(year = as.integer(stringr::str_sub(incidence_start_date,1,4)))
write.csv(inc_years_copd,here::here("Macrolides/inc_years_copd.csv"))
inc_years_asthma<- rbind(inc_asthma_adj) %>%
filter(analysis_interval=="years") %>%
mutate(year = as.integer(stringr::str_sub(incidence_start_date,1,4)))
write.csv(inc_years_asthma,here::here("Macrolides/inc_years_asthma.csv"))
inc_years_aco <- rbind(inc_aco_adj) %>%
filter(analysis_interval=="years") %>%
mutate(year = as.integer(stringr::str_sub(incidence_start_date,1,4)))
write.csv(inc_years_aco,here::here("Macrolides/inc_years_aco.csv"))
inc_years_general_population <- rbind(inc_general_population_adj) %>%
filter(analysis_interval=="years") %>%
mutate(year = as.integer(stringr::str_sub(incidence_start_date,1,4)))
write.csv(inc_years_general_population,here::here("Macrolides/inc_years_general_population.csv"))
View(cdm_asthma)
ecg_concept_ids
# I want to find ECGs done x-time before a cohort start date of drug exposure
cohort_with_ecg <-
cdm_asthma$`prevalence chronic use asthma` %>%
PatientProfiles::addConceptIntersect(
#x,#already feeded by pipe-function
conceptSet = ecg_concept_ids,
indexDate = "cohort_start_date",
censorDate = NULL,
window =
list(c(0, 7),
c(0, 14),
c(0, 30),
c(0, 60)),
targetStartDate = "cohort_start_date",
targetEndDate = NULL,
order = "first",
flag = TRUE,
count = TRUE,
date = TRUE,
days = TRUE,
nameStyle = "{value}_{concept_name}_{window_name}"
)
# I want to find ECGs done x-time before a cohort start date of drug exposure
cohort_with_ecg <-
cdm_asthma$`prevalence chronic use asthma` %>%
PatientProfiles::addConceptIntersect(
#x,#already feeded by pipe-function
conceptSet = ecg_concept_ids,
indexDate = "cohort_start_date",
censorDate = NULL,
window =
list(c(0, 7),
c(0, 14),
c(0, 30),
c(0, 60)),
targetStartDate = "cohort_start_date",
targetEndDate = NULL,
order = "first",
value = c("flag","count","date","days"),
nameStyle = "{value}_{concept_name}_{window_name}"
)
# I want to find ECGs done x-time before a cohort start date of drug exposure
cohort_with_ecg <-
cdm_asthma$`prevalence chronic use asthma` %>%
PatientProfiles::addConceptIntersect(
#x,#already feeded by pipe-function
conceptSet = ecg_concept_ids,
indexDate = "cohort_start_date",
censorDate = NULL,
window =
list(c(0, 7),
c(0, 14),
c(0, 30),
c(0, 60)),
targetStartDate = "event_start_date",
targetEndDate = NULL,
order = "first",
value = c("flag","count","date","days"),
nameStyle = "{value}_{concept_name}_{window_name}"
)
cohort_with_ecg
View(cohort_with_ecg)
ECG_asthma <- cohort_with_ecg %>%
collect()%>%
select(count_vp_ecg_macro_study_broad_ipci_0_to_7,cohort_definition_id,count_vp_ecg_macro_study_broad_ipci_0_to_14,count_vp_ecg_macro_study_broad_ipci_0_to_30,count_vp_ecg_macro_study_broad_ipci_0_to_60)%>%
group_by(cohort_definition_id)%>%
summarise_at(c("count_vp_ecg_macro_study_broad_ipci_0_to_7","count_vp_ecg_macro_study_broad_ipci_0_to_14","count_vp_ecg_macro_study_broad_ipci_0_to_30","count_vp_ecg_macro_study_broad_ipci_0_to_60"),sum)
View(ECG_asthma)
ecg_concept_ids
# install latest renv package
install.packages("renv", repos = cran_mirror_local)
library(renv)
renv::snapshot()
list.files(
path = here::here("r_scripts"),
full.names = TRUE)[c(7,17)]
list.files(
path = here::here("r_scripts_heleen"),
full.names = TRUE)[c(7,17)]
list.files(
path = here::here("r_scripts_heleen"),
full.names = TRUE)
list.files(
path = here::here("r_scripts_heleen"),
full.names = TRUE)[c(1:30)]
scripts_to_execute <- list.files(
path = here::here("r_scripts"),
full.names = TRUE)
scripts_to_execute
rm(scripts_to_execute)
